#!@PYTHON@

# lt
import gettext
import locale
import os

import sys


APP_ID = '@APP_ID@'
VERSION = '@VERSION@'
LOCALE_DIR = '@LOCALE_DIR@'
PKGDATA_DIR = '@PKGDATA_DIR@'

sys.path.append('@PYTHON_DIR@')

# 这个在archlinux测试可以后台响应剪贴板，但是在flatpak会直接报错，暂时删除
# os.environ["GDK_BACKEND"] = "x11"

import gi

# gi.require_version("Adw", "1.4")
gi.require_version("Adw", "1")
gi.require_version('Gio', '2.0')
# gi.require_version('Gtk', '4.12')
gi.require_version('Gtk', '4.0')
gi.require_version('Gst', '1.0')

from gi.repository import Adw, Gio, Gtk


def set_internationalization():
    """Sets application internationalization."""
    try:
        locale.bindtextdomain(APP_ID, LOCALE_DIR)
        locale.textdomain(APP_ID)
    except AttributeError as e:
        # Python built without gettext support does not have
        # bindtextdomain() and textdomain().
        print(f"Some gettext translations will not work. Error:\n{e}")

    gettext.bindtextdomain(APP_ID, LOCALE_DIR)
    gettext.textdomain(APP_ID)


def set_resources():
    """Sets application ressource file."""
    Gio.Resource._register(Gio.resource_load(os.path.join(PKGDATA_DIR, f'{APP_ID}.gresource')))


def run_application():
    """Runs application and returns its exit code."""
    from lfy.main import LfyApplication
    return LfyApplication(APP_ID, VERSION).run(sys.argv)


def main():
    """Sets environment and runs GNOME Music."""
    set_internationalization()
    set_resources()
    return run_application()


if __name__ == '__main__':
    sys.exit(main())
